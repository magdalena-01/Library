@model IEnumerable<Library.Models.Book>

@{
    ViewData["Title"] = "Index";
}

<h1>Books</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>

<button id="filterToggleBtn" class="btn btn-primary">Search</button>

<div id="filterFormContainer" style="display: none;">
    @using (Html.BeginForm("Index", "Books", FormMethod.Get))
    {
        <div class="form-row">
            <div class="form-group col-md-4">
                <label for="searchString">Search:</label>
                <input type="text" class="form-control" name="searchString" value="@ViewData["CurrentFilter"]" />
            </div>
            <div class="form-group col-md-4">
                <label for="authorId">Filter by Author:</label>
                <select class="form-control" name="authorId">
                    <option value="">All Authors</option>
                    @foreach (var author in ViewBag.Authors)
                    {
                        <option value="@author.AuthorId">
                            @author.FullName
                        </option>
                    }
                </select>
            </div>
            <div class="form-group col-md-4">
                <label for="genreId">Filter by Genre:</label>
                <select class="form-control" name="genreId">
                    <option value="">All Genres</option>
                    @foreach (var genre in ViewBag.Genres)
                    {
                        <option value="@genre.Id">
                            @genre.GenreName
                        </option>
                    }
                </select>
            </div>
        </div>
        <button type="submit" class="btn btn-primary">Filter</button>
    }
</div>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Author.FullName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                Average Rating
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Title)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Author.FullName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @if (item.Reviews.Any())
                    {
                        <text>@item.Reviews.Average(r => r.Rating)</text>
                    }
                    else
                    {
                        <text>No reviews</text>
                    }
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.BookId">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.BookId">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.BookId">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

@section Scripts {
    <script>
        document.getElementById("filterToggleBtn").addEventListener("click", function () {
            var filterFormContainer = document.getElementById("filterFormContainer");
            if (filterFormContainer.style.display === "none") {
                filterFormContainer.style.display = "block";
            } else {
                filterFormContainer.style.display = "none";
            }
        });
    </script>
}
